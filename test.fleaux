import Std;

let Add3(tpl: Tuple(Number, Number, Number)) : Number = (((tpl, 0) -> Std.ElementAt, (tpl, 1) -> Std.ElementAt) -> Std.Add, (tpl, 2) -> Std.ElementAt) -> Std.Add;

(1, 2, 3) -> Add3;

// This line is a Comment
//import Std;
//import test_import;
//
//( 1, 2 ) -> Std.Println;
//
//( (1, 1) -> Std.Add ) -> Std.Println;
////
//let x() : Number = 5;
////let X : Number :: 5 -> Std.Sqrt;
////
//let MyLib.Add(x: Number, y: Number) : Number = (x, y) -> +;
//let Negate(x: Number) : Number = (x) -> -;
//
//let Multiply2(x : Number) : Number :: (x) -> Std.Multiply -> Std.Println;
//let AddPrint(x : Number, y: Number) : Number :: (x, y) -> Std.Add -> Std.Println;

// This line is a Comment
// This line is a Comment
// This line is a Comment
// y = 4x^7 - x^5
//let Polynomial(x : Number) : Number :: ((((4, x) -> Std.Multiply, 7) -> Std.Pow), ((x, 5) -> Std.Pow)) -> Std.Subtract;
//(1, 2) -> AddPrint;
//("Hello, World!") -> Std.Println;

// This line is a Comment
// This line is a Comment
// This line is a Comment
// This line is a Comment

//2 -> ((((4, x) -> Std.Multiply, 7) -> Std.Pow), ((x, 5) -> Std.Pow)) -> Std.Subtract;


// This line is a Comment